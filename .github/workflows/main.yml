name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '12'
          
      - name: Cache npm global modules (yarn)
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-  
          
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - run: npm install -g yarn  
          
      - run: yarn install
      - run: yarn build
        env:
          CI: false
      
      # TODO: Add unit testing when it is ready
      # - run: yarn test
      #   env:
      #     CI: false

  docker:
    needs: build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - name: Setting the docker tag
        run: |
          if [ "$BRANCH" == "refs/heads/master" ]; then
            echo "docker_tag=$BASE_TAG:latest" >> $GITHUB_ENV
          elif [ "$BRANCH" == "refs/heads/staging" ]; then
            echo "docker_tag=$BASE_TAG:staging" >> $GITHUB_ENV
          else
            echo "docker_tag=$BASE_TAG:beta" >> $GITHUB_ENV
          fi
        env:
          BRANCH: ${{ github.ref }}
          BASE_TAG: goblineer/goblineer-next-frontend

        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.DOCKER_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

